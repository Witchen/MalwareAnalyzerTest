import virtualbox
from virtualbox.library import StorageBus, MediumVariant, AccessMode, DeviceType, LockType, MediumState

vbox = virtualbox.VirtualBox()

machineName = "TestXP32"                     #  Any name
machineType = "WindowsXP"                    #  Based on VBox guest os enum
winXpPath = "C:\Users\JuniorXR\Downloads"
session = virtualbox.Session()

def createNewMachine(machineName, machineType, winXpPath):
    newmachine = vbox.create_machine("", machineName, [], machineType, "")
    newmachine.vram_size = 64           # Set Video RAM Value
    newmachine.memory_size = 512        # Set RAM Value (in MB)
    newmachine.save_settings()          # Save all the settings into .vbox file

    storageControlName = "IDEStrController"
    storageControl = newmachine.add_storage_controller(storageControlName, StorageBus(1))

    ### Create the medium of storage (Main HardDisk)
    mediumType = "VDI"                                      #  Based on VBox medium type enum
    vboxPath = str(newmachine.settings_file_path)           #  Returning the .vbox settings path
    machinePath = vboxPath[:vboxPath.rfind("\\")]           #  Substring the path
    vdiPath = machinePath + "\\" + machineName + ".vdi"     #  Set the .vdi path
    deviceType = DeviceType(3)                              #  3=HardDisk
    accessMode = AccessMode(2)                              #  2=ReadWrite
    medium = vbox.create_medium(mediumType, vdiPath, accessMode, deviceType)

    ### Create the medium of storage (DVD for XP Windows)
    isoPath = winXpPath + "\\Windows XP Pro SP3.iso"
    deviceType2 = DeviceType(2)                              #  2=DVD
    accessMode2 = AccessMode(1)                              #  2=ReadOnly
    medium2 = vbox.open_medium(isoPath, deviceType2, accessMode2, False)

    ### Lock the machine for gaining access to write settings
    print str(newmachine) + " state = "  + str(newmachine.session_state)
    vbox.register_machine(newmachine)               # Register the machine to enable lock machine
    newmachine.lock_machine(session, LockType(2))   # Lock the machine LockType(2) = Write
    print str(newmachine) + " state = "  + str(newmachine.session_state)
    print str(session.machine) + " state = "  + str(session.machine.session_state)

    ### Create the actual storage unit
    mediumSize = 10 * 1024 * 1024 * 1024    # 10 GB
    mediumVariant = [MediumVariant(0)]      # Standard Variant / Dynamic Allocated
    mediumCreateProgress = medium.create_base_storage(mediumSize, mediumVariant)

    while mediumCreateProgress.completed != 1:
        print "Create medium progress state is = " + str(medium.state)

    if mediumCreateProgress.completed == 1:
        print "Medium Create Progress completed"
        if medium.state != MediumState(1):      # MediumState(1) = Created
            print "Error status.text: " + str(mediumCreateProgress.error_info.text)
            print "Error status.component: " + str(mediumCreateProgress.error_info.component)
            print "Error status.next_p: " + str(mediumCreateProgress.error_info.next_p)
            print "Error status.result_code " + str(mediumCreateProgress.error_info.result_code)
            print "Error status.result_detail: " + str(mediumCreateProgress.error_info.result_detail)
        session.machine.attach_device(storageControlName, 0, 0, deviceType, medium)     # Session.Machine to gain mutable machine, attach HardDisk
        session.machine.attach_device(storageControlName, 1, 0, deviceType2, medium2)   # Attach DVD

    session.machine.save_settings()         # Update the settings of the attached medium to the .vdi file
    session.unlock_machine()

### Install the Windows XP
def installWindows():
    machine = vbox.find_machine(machineName)
    machine.launch_vm_process()

createNewMachine(machineName, machineType, winXpPath)
installWindows()
